import Sidebar from "@/components/Sidebar";
import { Card } from "@/components/ui/card";
import { Label } from "@/components/ui/label";

export const metadata = {
  title: "TCC",
  description: "Generated by create next app",
};

async function getTimeLeadersboard(problemId: string) {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/users/${problemId}/submissions/topbytime`
  );
  if (!res.ok) {
    throw new Error("Failed to fetch data");
  }
  return res.json();
}

async function getMemoryLeadersboard(problemId: string) {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_API_BASE_URL}/api/users/problem/${problemId}/submissions/topbymemory`
  );
  if (!res.ok) {
    throw new Error("Failed to fetch data");
  }
  return res.json();
}

export default async function ProblemLayout({ children, params }) {
  const timeUsers = await getTimeLeadersboard(params.problemId);
  const memoryUsers = await getMemoryLeadersboard(params.problemId);
  // console.log(params.problem_id);

  return (
    <div className="container flex mx-auto my-8 space-x-4">
      <div className="h-max min-w-64 space-y-4">
        <Sidebar slug={params.problemId} />
      </div>
      {children}
      <div className="h-max min-w-64 space-y-4">
        <Card>
          <div className="p-3 border-b">
            <Label className="text-md font-bold">Top User by Time</Label>
          </div>
          <div className="table-wrapper p-3 text-muted-foreground">
            <table className="w-full border-separate border-spacing-y-2 text-sm">
              <thead>
                <tr className="text-left">
                  <th>#</th>
                  <th>User</th>
                  <th>Time</th>
                </tr>
              </thead>

              <tbody>
                {timeUsers.map((user, index) => (
                  <tr key={index} className="text-left">
                    <td>{index+1}</td>
                    <td>{user.name}</td>
                    <td>{user.time}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </Card>
        <Card>
          <div className="p-3 border-b">
            <Label className="text-md font-bold">Top User by Memory</Label>
          </div>
          <div className="table-wrapper p-3 text-muted-foreground">
            <table className="w-full border-separate border-spacing-y-2 text-sm">
              <thead>
                <tr className="text-left">
                  <th>#</th>
                  <th>User</th>
                  <th>Time</th>
                </tr>
              </thead>

              <tbody>
              {memoryUsers.map((user, index) => (
                  <tr key={index} className="text-left">
                    <td>{index+1}</td>
                    <td>{user.name}</td>
                    <td>{user.memory}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </Card>
      </div>
    </div>
  );
}
